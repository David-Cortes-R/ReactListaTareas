{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"6KAEcA,EAAc,WAA2B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAElD,OAAQA,EAAOC,MAEX,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE7B,IAAK,SACD,OAAOH,EAAMI,QAAQ,SAACC,GAClB,OAAOA,EAAKC,KAAOL,EAAOE,WAGlC,IAAK,SAED,OAAOH,EAAMO,KAAK,SAAEF,GAEhB,OAASA,EAAKC,KAAOL,EAAOE,QAApB,YAAC,eACME,GADP,IACaG,MAAOH,EAAKG,OACvBH,KAGlB,QACI,OAAOL,I,OCpBNS,EAAe,SAAC,GAAiD,IAA/CJ,EAA8C,EAA9CA,KAAMK,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACtD,OACI,mCACI,qBAEIC,UAAU,kBAFd,UAKI,oBACIA,UAAS,UAAKR,EAAKG,MAAQ,YAC3BM,QAAS,kBAAMF,EAAaP,EAAKC,KAFrC,UAIKI,EAAQ,EAJb,KAIkBL,EAAKU,QAIvB,wBACIF,UAAU,iBACVC,QAAS,kBAAMH,EAAaN,EAAKC,KAFrC,sBAZKD,EAAKC,OCHbU,EAAW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAON,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC5C,OACI,mCACI,oBAAIC,UAAU,oCAAd,SAGQI,EAAMV,KAAK,SAACF,EAAMK,GAAP,OAEH,cAAC,EAAD,CAEIL,KAAOA,EACPK,MAAQA,EACRC,aAAeA,EACfC,aAAeA,GAJTP,EAAKC,Y,OCP9BY,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAGtB,ECJmB,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAiBA,MAAO,CAAED,EATiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEHE,EAAOC,KAAQD,EAAOE,UATlB,WACVH,EAAWH,KDFqCO,CAAQ,CACxDC,YAAa,KADjB,mBAASA,EAAT,KAASA,YAAeC,EAAxB,KAA2CC,EAA3C,KA2BA,OACI,mCAEI,uBACIC,SA1BS,SAACC,GAIlB,GAFAA,EAAEC,mBAEEL,EAAYM,OAAOC,QAAU,GAAjC,CAIA,IAAMC,EAAU,CACZ9B,IAAI,IAAI+B,MAAOC,UACfvB,KAAMa,EACNpB,MAAM,GAIVW,EAAeiB,GACfN,MAWQjB,UAAU,UAFd,UAII,uBACIA,UAAU,qBACVX,KAAK,OACLuB,KAAK,cACLc,YAAY,gBACZC,aAAa,MACbd,MAAOE,EACPa,SAAUZ,IAId,wBACI3B,KAAK,SACLW,UAAU,gCAFd,2BE7CV6B,EAAO,WACT,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAI3CC,EAAU,WAGnB,MAA0BC,qBAAYjD,EAAa,GAAI2C,GAAvD,mBAAOzB,EAAP,KAAcgC,EAAd,KAIAC,qBAAU,WACNL,aAAaM,QAAQ,QAASR,KAAKS,UAAUnC,MAC9C,CAACA,IAkCJ,OACI,gCACI,qBAAIJ,UAAU,SAAd,8BAAyCI,EAAMkB,OAA/C,OAEA,cAAC,EAAD,CACIhB,cAzBU,SAAEiB,GAEpBa,EAAS,CACL/C,KAAM,MACNC,QAASiC,OAwBT,uBAGA,cAAC,EAAD,CACInB,MAAQA,EACRN,aA5CS,SAAC0C,GAOlBJ,EALe,CACX/C,KAAM,SACNC,QAASkD,KAyCLzC,aAvBS,SAAEyC,GAEnBJ,EAAS,CACL/C,KAAM,SACNC,QAASkD,W,YC3CrBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a34cdae3.chunk.js","sourcesContent":["\r\n\r\nexport const  todoReducer = ( state = [], action ) => {\r\n\r\n    switch( action.type ){\r\n\r\n        case 'add':\r\n            return [...state, action.payload ];\r\n        \r\n        case 'delete':\r\n            return state.filter( (todo) => {\r\n                return todo.id !== action.payload\r\n            });\r\n\r\n        case 'toggle':\r\n\r\n            return state.map( ( todo ) => {\r\n\r\n                return  (todo.id === action.payload) \r\n                        ? { ...todo, done: !todo.done } \r\n                        : todo;\r\n            });\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","\r\n\r\nimport React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n    return (\r\n        <>\r\n            <li\r\n                key={todo.id}\r\n                className=\"list-group-item\"\r\n            >\r\n\r\n                <p\r\n                    className={`${todo.done && 'complete'}`}\r\n                    onClick={() => handleToggle(todo.id)}\r\n                >\r\n                    {index + 1}- {todo.desc}\r\n                </p>\r\n\r\n\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDelete(todo.id)}\r\n                >\r\n                    Borrar\r\n                </button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n    return (\r\n        <>\r\n            <ul className=\"list-group list-group-flush lista\">\r\n\r\n                {\r\n                    todos.map( (todo, index) => (\r\n\r\n                            <TodoListItem \r\n                                key={ todo.id }\r\n                                todo={ todo } \r\n                                index={ index }\r\n                                handleDelete={ handleDelete }\r\n                                handleToggle={ handleToggle } \r\n                            />\r\n                        \r\n                    ))\r\n                }\r\n\r\n\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\n\r\n\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <form\r\n                onSubmit={handleSubmit}\r\n                className=\"agregar\">\r\n\r\n                <input\r\n                    className=\"form-control input\"\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"Agregar Tarea\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </input>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary boton\"\r\n                >\r\n                    Agregar\r\n            </button>\r\n\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\n\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n  \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    \r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n\r\n}\r\n","\r\nimport React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\n\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\n\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n\r\n    const [todos, dispatch] = useReducer( todoReducer, [], init );\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n\r\n    const handleDelete = (todoId) => {\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch( action );\r\n    }\r\n\r\n\r\n    const handleAddTodo = ( newTodo ) => {\r\n\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleToggle = ( todoId ) => {\r\n\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"titulo\">Lista de Tareas ({todos.length})</h1>\r\n\r\n            <TodoAdd \r\n                handleAddTodo={ handleAddTodo }\r\n            />\r\n\r\n            <hr />\r\n\r\n\r\n            <TodoList \r\n                todos={ todos } \r\n                handleDelete={ handleDelete } \r\n                handleToggle={ handleToggle} \r\n            />\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { TodoApp } from './components/TodoApp';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <TodoApp />,\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}